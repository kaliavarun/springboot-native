# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  docker: circleci/docker@1.7.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - setup_remote_docker:
          version: 20.10.14
      # Checkout the code as the first step.
      - checkout
      - run:
          name: Environment
          command: |
            cat /etc/os-release
            env              
            docker --version
      - run:
          name: Install maven
          command: |
              env              
              if [[ "$CIRCLE_BRANCH" =~ ^(arm64|circleci-project-setup)$ ]]; then
                curl -LO https://dlcdn.apache.org/maven/maven-3/3.9.1/binaries/apache-maven-3.9.1-bin.tar.gz
                tar -zxvf apache-maven-3.9.1-bin.tar.gz
                echo 'export PATH=$PATH:$(pwd)/apache-maven-3.9.1/bin' >> "$BASH_ENV"
                source "$BASH_ENV"
              fi
      - run:
          name: Install GraalVM
          command: |
              if [[ "$CIRCLE_BRANCH" =~ ^(arm64|circleci-project-setup)$ ]]; then
                  curl -LO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.1/graalvm-ce-java17-linux-aarch64-22.3.1.tar.gz
                  tar -zxvf graalvm-ce-java17-linux-aarch64-22.3.1.tar.gz
                  echo 'export GRAALVM_HOME=$(pwd)/graalvm-ce-java17-22.3.1' >> "$BASH_ENV"
                  echo 'export JAVA_HOME=$GRAALVM_HOME' >> "$BASH_ENV"
                  echo 'export PATH=$PATH:GRAALVM_HOME/bin' >> "$BASH_ENV"
                  source "$BASH_ENV"
              fi
      - run:
          name: Install native-image
          command: |
              if [[ "$CIRCLE_BRANCH" =~ ^(arm64|circleci-project-setup)$ ]]; then
                $GRAALVM_HOME/bin/gu install native-image
              fi      
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: |
                docker --version
                mvn spring-boot:build-image -DskipTests=true -Pnative
      # Then run your tests!
      - run:
          name: Test
          command: mvn test
      # Push to docker hub
      - run:
          name: Push to docker
          command: |
            docker container ls
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
            docker tag docker.io/library/springboot-native:0.0.1-SNAPSHOT $DOCKER_USER/springboot-native:latest
            docker push $DOCKER_USER/springboot-native:latest

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test:
          context:
            - docker-hub